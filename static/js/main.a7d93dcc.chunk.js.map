{"version":3,"sources":["js/randomColorLength.js","components/About.js","components/PortfolioItem.js","components/SkillBar.js","js/displace.js","components/PortfolioPlayground.js","components/ImageEditor.js","data.js","App.js","serviceWorker.js","index.js"],"names":["colors","React","Component","PortfolioItem","_ref","url","header","text","index","xTransform","yTransform","react_default","a","createElement","className","concat","style","transform","href","title","alt","src","getX","i","Math","floor","width","getY","yrem","height","ele","key","keys","map","returnPositions","elementPos","keyMap","forEach","_ref2","j","length","initial","getInitialDisplacePos","ImageUploader","_React$useState","useState","_React$useState2","Object","slicedToArray","cropping","setCropping","_React$useState3","_React$useState4","imageEditor","setImageEditor","editorRef","useCallback","ref","getInstance","onMouseUp","crop","getCropzoneRect","deactivateAll","stopDrawingMode","buttons","document","getElementsByClassName","click","useEffect","window","addEventListener","removeEventListener","on","props","type","paddingTop","toastui_react_image_editor_default","position","includeUI","loadImage","name","menu","menuBarPosition","usageStatistics","data","me","first","firstshort","last","email","role","imageUrl","address","address2","phone","imagebaseurl","components","ImageEditor","App","objectSpread","hydratedComponents","c","cloneElement","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7d93dcc.chunk.js","sourcesContent":["\nconst colors = [\n  '#FDFB33',\n  '#030200',\n  '#292F3D',\n  '#6D9EA7',\n  '#572005',\n  '#DEF2C8',\n  '#C5DAC1',\n  '#D8AA96',\n  '#F7B1AB'\n];\n\n\nexport const assignNewColorLength = skill => {\n  let color = '#313131';\n  let stateSkill = skill;\n  const mod = Math.ceil(Math.random() * 10);\n  color = colors[Math.floor(Math.random() * colors.length)]\n  stateSkill += mod;\n  return {stateSkill, color}\n}\n","import React from 'react';\n\nexport class About extends React.Component{\n  state = {showImg: false}\n  render() {\n    const { me } = this.props;\n    const {showImg} = this.state;\n    return (\n      <section id=\"about\">\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <div className=\"profile-pic\" />\n        </div>\n        <div className=\"three columns contact-details\">\n          <h2>Contact Details</h2>\n          <p className=\"address\">\n            <span>{me.first} {me.last}</span><br />\n            <span>{me.address}<br />\n              {me.address2}\n            </span><br />\n            <span>{me.phone}</span><br />\n            <span>{me.email}</span>\n          </p>\n        </div>\n        <div className=\"six columns main-col\">\n          <div className=\"follow-mountain\">\n          <h2>About Me >></h2>\n          <p className=\"text-right\" style={{pointerEvents: 'none'}}>\n              I am an American living in  beautiful Innsbruck with my wonderful Norwegian wife. I like finding interesting problems and solving them whether in my personal or professional life.\n              This translates easily to both web development problems, as well as exploring the mountains around my home. I believe in challenging myself every day.\n          </p>\n          <br/><a className=\"smoothscroll\" href=\"#contact\">Let's Talk</a>\n          </div>\n        </div>\n\n        </div> {/* end .main-col */}\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#resume\"><i className=\"icon-down-circle\" /></a>\n        </p>\n    </section>\n    )\n  }\n}\n\n// <div className=\"row\">\n//\n//   <div className=\"columns download\">\n//     <p>\n//       <a href=\"#\" className=\"button\"><i className=\"fa fa-download\" />Download Resume</a>\n//     </p>\n//   </div>\n// </div> {/* end row */}\n\n// <div id=\"modal-09\" className={`popup-modal ${showImg ? '' : \"mfp-hide\"}`} height=\"550px\">\n//   <img className=\"scale-with-grid\" src=\"images/climbing.jpg\" alt />\n//   <div className=\"link-box\">\n//     <a className=\"popup-modal-dismiss\" onClick={() => this.setState({ showImg: false })}>Close</a>\n//   </div>\n// </div>{/* modal-03 End */}\n\nexport default About;\n","import React from 'react';\n\nexport const PortfolioItem = ({ url, header, text, index, xTransform, yTransform }) => (\n  <div\n  className={`columns portfolio-item ${xTransform || yTransform ? 'in-motion' : ''}`}\n  style={{\n    transform: `translate(${xTransform}px, ${yTransform}px)`,\n  }}\n  >\n    <div className=\"item-wrap\">\n      <a href={`#modal-0${index}`} title>\n        <img alt=\"\" src={url} />\n        <div className=\"overlay\">\n          <div className=\"portfolio-item-meta\">\n            <h5>{header}</h5>\n            <p>{text}</p>\n          </div>\n        </div>\n        <div className=\"link-icon\"><i className=\"icon-plus\" /></div>\n      </a>\n    </div>\n  </div>\n);\n\nexport default PortfolioItem;\n","import React from 'react';\nimport { assignNewColorLength } from '../js/randomColorLength';\n\nexport class SkillBar extends React.Component {\n  state = {}\n  inMotion(val) {\n    const { skill } = this.props;\n    const { mouseOver } = this.state;\n\n    if (mouseOver) {\n      const { stateSkill, color } = assignNewColorLength(skill)\n      this.setState({ stateSkill, color, mouseOver: true }, () => setTimeout(() => this.inMotion(), 1000));\n    } else {\n      this.setState({ mouseOver: false, stateSkill: null, color: null });\n    }\n  }\n\n  render() {\n    const { name, skill } = this.props;\n    const { stateSkill, color } = this.state;\n    return (\n      <li\n        onMouseOver={() => {this.setState({ mouseOver: true }, () => this.inMotion())}}\n        onMouseOut={() => this.setState({ mouseOver: false})}\n      >\n        <span className=\"bar-expand\" style={{ width: (stateSkill || skill) + '%', backgroundColor: color || '#313131' }}  />\n        <em>{name}</em>\n      </li>\n    );\n  }\n};\n\nexport default SkillBar;\n","const getX = i => {\n  let xrem = Math.floor(((i+1)/4) * width) % width // .2, .4, .6, .8\n  return xrem;\n}\nconst getY = i => {\n  let yrem = .1 * height;\n  if (i > 3) yrem = .6 * height\n  return yrem;\n}\n\n\nconst width = 1020;\nconst height = 600;\n\nexport const getInitialDisplacePos = ({ keys }) => {\n  let elementPos = {};\n  keys.forEach((key, i) => {\n    elementPos[key] = { xTransform: getX(i), yTransform: getY(i)}\n  })\n  return { elementPos };\n}\n\nexport const displace = ({ elementPos, keys }) => {\n  const randomKeys = keys.sort(() => Math.round(Math.random()) ? 1 : -1)\n  let newElementPos = {};\n  randomKeys.forEach((key, i) => {\n    newElementPos[key] = { xTransform: getX(i), yTransform: getY(i)}\n  })\n  return { elementPos: newElementPos }\n}\n","import React from 'react';\nimport PortfolioItem from './PortfolioItem';\nimport { displace, getInitialDisplacePos } from '../js/displace'\n\nconst ele = [\n  {\n    header: \"BGRoll\",\n    text: 'Statistics/Die Roll Log',\n    url:\"images/portfolio/bgroll.png\",\n    key:'b'\n  },\n  {\n    header: 'CLICC',\n    text: 'Chemical Database/Analysis',\n    url: 'images/portfolio/clicc.png',\n    key: 'c'\n  },\n  {\n    header: 'Vivibot',\n    text: 'FB ChatBot & CMS',\n    url: \"images/portfolio/vivi.png\",\n    key: 'f'\n  },\n  {\n    header: 'Guidings',\n    text: 'Map/Video-based Recommendation Finder',\n    url: 'images/portfolio/guidings.png',\n    key: 'g'\n  },\n  {\n    header: 'Climbz',\n    text: 'Climbing Gym Management and User App',\n    url: 'images/portfolio/climbz.png',\n    key: 'cl'\n  },\n  {\n    header: 'Grio',\n    text: 'Grio Homepage',\n    url: 'images/portfolio/grio.png',\n    key: 'gr'\n  },\n  {\n      header: 'Freedirt',\n      text: 'Free Camping Finder',\n      url: 'images/portfolio/freedirt.png',\n      key:'fd'\n  },\n  {\n    header: 'Getaround',\n    text: 'Popular Car Sharing App',\n    url: \"images/portfolio/getaround.png\",\n    key: 'l'\n  }\n];\n\nconst keys = ele.map(({key}) => key);\n\n// will all return 0 for now\nconst returnPositions = elementPos => {\n  let keyMap = {};\n  ele.forEach(({key}) =>( keyMap[key] = {i : 0, j: 0}))\n  for (var i =0; i < elementPos.length; i++) {\n    for (var j = 0; j < elementPos[i].length; j++) {\n      if (elementPos[i][j]) {\n\n        keyMap[elementPos[i][j]] = { i, j};\n      }\n    }\n  }\n  return keyMap;\n}\n\nconst initial = getInitialDisplacePos({ keys });\n\nexport class PortfolioPlayground extends React.Component {\n  state = {\n    initialGrid: initial,\n    initialKeyMap: returnPositions(initial),\n    shift: true\n  }\n\n  componentDidMount() {\n    this.makeMotion(this.state.initialGrid)\n  }\n\n  makeMotion(initial) {\n    let { elementPos, shift } = this.state;\n    if (shift) {\n      ({ elementPos } = displace({elementPos: elementPos || initial, keys }));\n      this.setState({ elementPos },() => this.timer = setTimeout(() => this.makeMotion(), 5000))\n    } else {\n      clearTimeout(this.timer);\n    }\n  }\n\n  toggleShifting(val) {\n    this.setState({ shift: val}, () => {\n      if (this.state.shift) {\n        this.timer = setTimeout(() => this.makeMotion(), 5000)\n      } else {\n        clearTimeout(this.timer);\n      }\n    })\n  }\n\n  render() {\n    const { elementPos, initialKeyMap } = this.state;\n    if (!elementPos) return null;\n    return (\n      <div className=\"twelve columns collapsed\">\n      <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n        <h1>Take a gander at a few of my previous projects</h1>\n          {ele.map((item, index) =>\n            <div\n              key={item.key}\n              onMouseEnter={() => this.toggleShifting(false)}\n              onMouseLeave={() => this.toggleShifting(true)}\n            >\n              <PortfolioItem\n                {...item}\n                index={index + 1}\n                xTransform={elementPos[item.key].xTransform - initialKeyMap[item.key].i}\n                yTransform={elementPos[item.key].yTransform - initialKeyMap[item.key].j}\n              />\n            </div>\n            )}\n          </div> {/* twelve columns end */}\n\n      </div>\n    )\n  }\n};\n\nexport default PortfolioPlayground;\n","import React, { useCallback, useEffect } from 'react';\nimport ImageEditor from '@toast-ui/react-image-editor';\nimport 'tui-image-editor/dist/tui-image-editor.css';\n\n\nexport const ImageUploader = () => {\n    let cropped = false;\n    const [cropping, setCropping] = React.useState();\n\n  const [imageEditor, setImageEditor] = React.useState();\n  const editorRef = useCallback((ref) => {\n    if (ref && !imageEditor) {\n      setImageEditor(ref.getInstance());\n    }\n  }, []);\n\n  const onMouseUp = () => {\n      if (cropping) {\n        if (!cropped) {\n            imageEditor.crop(imageEditor.getCropzoneRect());\n            imageEditor.deactivateAll();\n            imageEditor.stopDrawingMode();\n            setCropping(false);\n            const buttons = document.getElementsByClassName(\"tie-btn-crop\");\n            if (buttons && buttons[0]) {\n                const button = buttons[0];\n                button.click();\n            }\n          }\n\n      }\n  }\n\n  React.useEffect(() => {\n    if (cropping) window.addEventListener(\"mouseup\", onMouseUp);\n    return () => window.removeEventListener(\"mouseup\", onMouseUp);\n    }, [cropping]);\n\n\n  if (imageEditor) {\n      imageEditor.on('objectActivated', (props) => {\n\n          if (props.type === 'cropzone') {\n              setCropping(true);\n          }\n          \n        });\n    //   imageEditor.on('objectAdded', (props) => console.log(props,'OBJECTADDED'));\n    //   imageEditor.on('objectMoved', (props) => console.log(props, 'OBJECTMOVED'));\n    //   imageEditor.on('mousedown', (props) => console.log(props, 'MOUSEDOWN'));\n    //   imageEditor.on('mouseup', (props) => console.log(props, 'MOUSEUP'));\n  }\n\n  return (\n    <div style={{height: '100vh', paddingTop: '160px'}}>\n      <ImageEditor\n        style={{ position: 'relative' }}\n        ref={editorRef}\n        includeUI={{\n          loadImage: {\n            name: 'Floor Plan',\n          },\n            menu: ['crop', 'flip', 'rotate'],\n          menuBarPosition: 'bottom',\n        }}\n        usageStatistics={false}\n      />\n    </div>\n  );\n};\n\nexport default ImageUploader;\n","const me = {\n  first: 'Philip',\n  firstshort: 'Phil',\n  last: 'Lauffenburger',\n  email: 'lauffenp@gmail.com',\n  role: 'Full Stack Contracting Developer',\n  imageUrl: '',\n  address: 'Hormayrstraße 19, Top 11',\n  address2: 'Innsbruck AT, 6020',\n  phone: '+1-719-679-7516'\n}\n\nexport default {\n  me,\n  imagebaseurl: \"https://lauffenp.github.io/\"\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from  './components/Testimonials';\nimport ContactUs from './components/Contact';\nimport Footer from './components/Footer';\nimport ImageEditor from './components/ImageEditor';\nimport './App.css';\n\nimport data from './data';\nconst components = [\n  <ImageEditor  key=\"image-editor\"/>,\n  // <Header  key=\"header\"/>,\n  // <About key=\"about\" />,\n  // <Resume key=\"resume\" />,\n  // <Portfolio key=\"portfolio\" />,\n  // <ContactUs key=\"contactus\"/>,\n  // <Footer key=\"footer\"/>,\n];\n\nconst props = { ...data }\n\nclass App extends Component {\n  render() {\n    const hydratedComponents = components.map(c => React.cloneElement(c, data))\n    return (\n      <div className=\"App\">\n        {hydratedComponents}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}